{"version":3,"sources":["utils/hooks/useInput.js","components/SimpleInput.js","App.js","index.js"],"names":["dispatchFunc","prevState","action","console","log","type","enteredValue","isTouched","INITIAL_STATE","useInput","validateState","useReducer","stateValues","dispatch","valueIsValid","hasError","value","isValid","valueChangeHandler","event","target","inputBlurHandler","SimpleInput","props","trim","enteredName","enteredNameIsValid","nameInputHasError","nameChangeHandler","nameBlurChangeHandler","includes","enteredEmail","enteredEmailIsValid","emailInputHasError","emailChangeHandler","emailBlurChangeHandler","formIsValid","nameInputClasses","emailInputClasses","onSubmit","preventDefault","className","htmlFor","id","onChange","onBlur","disabled","App","ReactDOM","render","document","getElementById"],"mappings":"gNAEMA,EAAe,SAACC,EAAWC,GAE/B,OADAC,QAAQC,IAAIH,GACQ,WAAhBC,EAAOG,MACTF,QAAQC,IAAIF,EAAOI,cACZ,2BACFL,GADL,IAEEK,aAAcJ,EAAOI,aACrBC,WAAW,KAGK,SAAhBL,EAAOG,KACF,2BACFJ,GADL,IAEEM,UAAWL,EAAOK,YAGfN,GAGHO,EAAgB,CACpBF,aAAc,GACdC,WAAW,GAGAE,EAAW,SAACC,GACvB,MAAgCC,qBAAWX,EAAcQ,GAAzD,mBAAOI,EAAP,KAAoBC,EAApB,KAEMC,EAAeJ,EAAcE,EAAYN,cACzCS,GAAYD,GAAgBF,EAAYL,UAU9C,MAAO,CACLS,MAAOJ,EAAYN,aACnBW,QAASH,EACTC,WACAG,mBAZyB,SAACC,GAC1BN,EAAS,CAAER,KAAM,SAAUC,aAAca,EAAMC,OAAOJ,SAYtDK,iBATuB,SAACF,GACxBN,EAAS,CAAER,KAAM,OAAQE,WAAW,O,OCmCzBe,EAtEK,SAACC,GACnB,MAMId,GAAS,SAACO,GAAD,MAA4B,KAAjBA,EAAMQ,UALrBC,EADT,EACET,MACSU,EAFX,EAEET,QACUU,EAHZ,EAGEZ,SACoBa,EAJtB,EAIEV,mBACkBW,EALpB,EAKER,iBAGF,EAMIZ,GAAS,SAACO,GAAD,OAAWA,EAAMc,SAAS,QAL9BC,EADT,EACEf,MACSgB,EAFX,EAEEf,QACUgB,EAHZ,EAGElB,SACoBmB,EAJtB,EAIEhB,mBACkBiB,EALpB,EAKEd,iBAGEe,GAAc,EAClBjC,QAAQC,IAAIsB,GACZvB,QAAQC,IAAI4B,GACRN,GAAsBM,IACxBI,GAAc,GAGhBjC,QAAQC,IAAIgC,GACZ,IAQMC,EAAmBV,EACrB,uBACA,eAEEW,EAAoBL,EACtB,uBACA,eACJ,OACE,uBAAMM,SAhBsB,SAACpB,GAC7BA,EAAMqB,kBAeN,UACE,sBAAKC,UAAWJ,EAAhB,UACE,uBAAOK,QAAQ,OAAf,uBACA,uBACErC,KAAK,OACLsC,GAAG,OACH3B,MAAOS,EACPmB,SAAUhB,EACViB,OAAQhB,IAETF,GAAqB,0DAExB,sBAAKc,UAAWH,EAAhB,UACE,uBAAOI,QAAQ,OAAf,uBACA,uBACErC,KAAK,QACLsC,GAAG,QACH3B,MAAOe,EACPa,SAAUV,EACVW,OAAQV,IAETF,GAAsB,0DAEzB,qBAAKQ,UAAU,eAAf,SACE,wBAAQK,UAAWV,EAAnB,0BCtDOW,MATf,WACE,OACE,qBAAKN,UAAU,MAAf,SACE,cAAC,EAAD,OCFNO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.555b45da.chunk.js","sourcesContent":["import { useReducer } from \"react\";\r\n\r\nconst dispatchFunc = (prevState, action) => {\r\n  console.log(prevState);\r\n  if (action.type === \"CHANGE\") {\r\n    console.log(action.enteredValue);\r\n    return {\r\n      ...prevState,\r\n      enteredValue: action.enteredValue,\r\n      isTouched: true,\r\n    };\r\n  }\r\n  if (action.type === \"BLUR\") {\r\n    return {\r\n      ...prevState,\r\n      isTouched: action.isTouched,\r\n    };\r\n  }\r\n  return prevState;\r\n};\r\n\r\nconst INITIAL_STATE = {\r\n  enteredValue: \"\",\r\n  isTouched: false,\r\n};\r\n\r\nexport const useInput = (validateState) => {\r\n  const [stateValues, dispatch] = useReducer(dispatchFunc, INITIAL_STATE);\r\n\r\n  const valueIsValid = validateState(stateValues.enteredValue);\r\n  const hasError = !valueIsValid && stateValues.isTouched;\r\n\r\n  const valueChangeHandler = (event) => {\r\n    dispatch({ type: \"CHANGE\", enteredValue: event.target.value });\r\n  };\r\n\r\n  const inputBlurHandler = (event) => {\r\n    dispatch({ type: \"BLUR\", isTouched: true });\r\n  };\r\n\r\n  return {\r\n    value: stateValues.enteredValue,\r\n    isValid: valueIsValid,\r\n    hasError,\r\n    valueChangeHandler,\r\n    inputBlurHandler,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { useInput } from \"../utils/hooks/useInput\";\r\nconst SimpleInput = (props) => {\r\n  const {\r\n    value: enteredName,\r\n    isValid: enteredNameIsValid,\r\n    hasError: nameInputHasError,\r\n    valueChangeHandler: nameChangeHandler,\r\n    inputBlurHandler: nameBlurChangeHandler,\r\n  } = useInput((value) => value.trim() !== \"\");\r\n\r\n  const {\r\n    value: enteredEmail,\r\n    isValid: enteredEmailIsValid,\r\n    hasError: emailInputHasError,\r\n    valueChangeHandler: emailChangeHandler,\r\n    inputBlurHandler: emailBlurChangeHandler,\r\n  } = useInput((value) => value.includes(\"@\"));\r\n\r\n  let formIsValid = false;\r\n  console.log(enteredNameIsValid);\r\n  console.log(enteredEmailIsValid);\r\n  if (enteredNameIsValid && enteredEmailIsValid) {\r\n    formIsValid = true;\r\n  }\r\n\r\n  console.log(formIsValid);\r\n  const formSubmissionHandler = (event) => {\r\n    event.preventDefault();\r\n    // if (!formIsValid) {\r\n    //   return;\r\n    // }else{\r\n\r\n    // }\r\n  };\r\n  const nameInputClasses = nameInputHasError\r\n    ? \"form-control invalid\"\r\n    : \"form-control\";\r\n\r\n  const emailInputClasses = emailInputHasError\r\n    ? \"form-control invalid\"\r\n    : \"form-control\";\r\n  return (\r\n    <form onSubmit={formSubmissionHandler}>\r\n      <div className={nameInputClasses}>\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          value={enteredName}\r\n          onChange={nameChangeHandler}\r\n          onBlur={nameBlurChangeHandler}\r\n        />\r\n        {nameInputHasError && <p>Name must not be empty</p>}\r\n      </div>\r\n      <div className={emailInputClasses}>\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          value={enteredEmail}\r\n          onChange={emailChangeHandler}\r\n          onBlur={emailBlurChangeHandler}\r\n        />\r\n        {emailInputHasError && <p>Name must not be empty</p>}\r\n      </div>\r\n      <div className=\"form-actions\">\r\n        <button disabled={!formIsValid}>Submit</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default SimpleInput;\r\n","import SimpleInput from \"./components/SimpleInput\";\r\n\r\n// import BasicForm from \"./components/BasicForm\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <SimpleInput />\r\n      {/* <BasicForm/> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}