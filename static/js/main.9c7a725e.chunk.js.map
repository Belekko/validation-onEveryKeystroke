{"version":3,"sources":["components/BasicForm.js","App.js","index.js"],"names":["BasicForm","props","useState","firstName","setFirstName","isFirstNameValid","setIsFirstNameValid","isFirstNameTouched","setIsFirstNameTouched","lastName","setLastName","isLastNameValid","setIsLastNameValid","isLastNameTouched","setIsLastNameTouched","email","setEmail","isEmailValid","setIsEmailValid","isEmailTouched","setIsEmailTouched","firstNameIsInvalid","firstNameClasses","lastNameIsInvalid","lastNameClasses","emailIsInvalid","emailClasses","formIsValid","trim","includes","onSubmit","e","preventDefault","alert","className","htmlFor","type","id","value","onChange","firstNameValue","target","lastNameValue","emailValue","disabled","App","ReactDOM","render","document","getElementById"],"mappings":"0LAuHeA,EArHG,SAACC,GACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgDF,oBAAS,GAAzD,mBAAOG,EAAP,KAAyBC,EAAzB,KACA,EAAoDJ,oBAAS,GAA7D,mBAAOK,EAAP,KAA2BC,EAA3B,KAEA,EAAgCN,mBAAS,IAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,EAA8CR,oBAAS,GAAvD,mBAAOS,EAAP,KAAwBC,EAAxB,KACA,EAAkDV,oBAAS,GAA3D,mBAAOW,EAAP,KAA0BC,EAA1B,KAEA,EAA0BZ,mBAAS,IAAnC,mBAAOa,EAAP,KAAcC,EAAd,KACA,EAAwCd,oBAAS,GAAjD,mBAAOe,EAAP,KAAqBC,EAArB,KACA,EAA4ChB,oBAAS,GAArD,mBAAOiB,EAAP,KAAuBC,EAAvB,KAuBMC,EAAqBd,IAAuBF,EAC5CiB,EAAmBD,EACrB,uBACA,eAEEE,EAAoBV,IAAsBF,EAC1Ca,EAAkBD,EACpB,uBACA,eAEEE,EAAiBN,IAAmBF,EACpCS,EAAeD,EAAiB,uBAAyB,eAEzDE,EACiB,KAArBxB,EAAUyB,QAAqC,KAApBnB,EAASmB,QAAiBb,EAAMc,SAAS,KAsBtE,OACE,uBAAMC,SArBc,SAACC,GACrBA,EAAEC,iBACGL,GAKLvB,EAAa,IACbI,GAAsB,GACtBF,GAAoB,GAEpBI,EAAY,IACZI,GAAqB,GACrBF,GAAmB,GAEnBI,EAAS,IACTI,GAAkB,GAClBF,GAAgB,IAdde,MAAM,oBAkBR,UACE,sBAAKC,UAAU,gBAAf,UACE,sBAAKA,UAAWZ,EAAhB,UACE,uBAAOa,QAAQ,aAAf,wBACA,uBACEC,KAAK,OACLC,GAAG,aACHC,MAAOnC,EACPoC,SAlEqB,SAACR,GAC9B,IAAMS,EAAiBT,EAAEU,OAAOH,MAChC9B,GAAsB,GACtBJ,EAAaoC,GACblC,EAA8C,KAA1BkC,EAAeZ,WAgE5BP,GACC,mBAAGa,UAAU,aAAb,8CAGJ,sBAAKA,UAAWV,EAAhB,UACE,uBAAOW,QAAQ,YAAf,uBACA,uBACEC,KAAK,OACLC,GAAG,YACHC,MAAO7B,EACP8B,SAvEoB,SAACR,GAC7B,IAAMW,EAAgBX,EAAEU,OAAOH,MAC/BxB,GAAqB,GACrBJ,EAAYgC,GACZ9B,EAA4C,KAAzB8B,EAAcd,WAqE1BL,GACC,mBAAGW,UAAU,aAAb,gDAIN,sBAAKA,UAAWR,EAAhB,UACE,uBAAOS,QAAQ,QAAf,4BACA,uBACEC,KAAK,OACLC,GAAG,QACHC,MAAOvB,EACPwB,SA7EmB,SAACR,GAC1B,IAAMY,EAAaZ,EAAEU,OAAOH,MAC5BlB,GAAkB,GAClBJ,EAAS2B,GACTzB,EAAgByB,EAAWd,SAAS,SA2E/BJ,GACC,mBAAGS,UAAU,aAAb,yDAGJ,qBAAKA,UAAU,eAAf,SACE,wBAAQU,UAAWjB,EAAnB,0BCpGOkB,MATf,WACE,OACE,qBAAKX,UAAU,MAAf,SAEE,cAAC,EAAD,OCHNY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.9c7a725e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst BasicForm = (props) => {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [isFirstNameValid, setIsFirstNameValid] = useState(false);\r\n  const [isFirstNameTouched, setIsFirstNameTouched] = useState(false);\r\n\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [isLastNameValid, setIsLastNameValid] = useState(false);\r\n  const [isLastNameTouched, setIsLastNameTouched] = useState(false);\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isEmailValid, setIsEmailValid] = useState(false);\r\n  const [isEmailTouched, setIsEmailTouched] = useState(false);\r\n\r\n  const firstNameChangeHandler = (e) => {\r\n    const firstNameValue = e.target.value;\r\n    setIsFirstNameTouched(true);\r\n    setFirstName(firstNameValue);\r\n    setIsFirstNameValid(firstNameValue.trim() !== \"\");\r\n  };\r\n\r\n  const lastNameChangeHandler = (e) => {\r\n    const lastNameValue = e.target.value;\r\n    setIsLastNameTouched(true);\r\n    setLastName(lastNameValue);\r\n    setIsLastNameValid(lastNameValue.trim() !== \"\");\r\n  };\r\n\r\n  const emailChangeHandler = (e) => {\r\n    const emailValue = e.target.value;\r\n    setIsEmailTouched(true);\r\n    setEmail(emailValue);\r\n    setIsEmailValid(emailValue.includes(\"@\"));\r\n  };\r\n\r\n  const firstNameIsInvalid = isFirstNameTouched && !isFirstNameValid;\r\n  const firstNameClasses = firstNameIsInvalid\r\n    ? \"form-control invalid\"\r\n    : \"form-control\";\r\n\r\n  const lastNameIsInvalid = isLastNameTouched && !isLastNameValid;\r\n  const lastNameClasses = lastNameIsInvalid\r\n    ? \"form-control invalid\"\r\n    : \"form-control\";\r\n\r\n  const emailIsInvalid = isEmailTouched && !isEmailValid;\r\n  const emailClasses = emailIsInvalid ? \"form-control invalid\" : \"form-control\";\r\n\r\n  const formIsValid =\r\n    firstName.trim() !== \"\" && lastName.trim() !== \"\" && email.includes('@');\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (!formIsValid) {\r\n      alert(\"fill the inputs\");\r\n      return;\r\n    }\r\n\r\n    setFirstName(\"\");\r\n    setIsFirstNameTouched(false);\r\n    setIsFirstNameValid(false);\r\n\r\n    setLastName(\"\");\r\n    setIsLastNameTouched(false);\r\n    setIsLastNameValid(false);\r\n\r\n    setEmail(\"\");\r\n    setIsEmailTouched(false);\r\n    setIsEmailValid(false);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"control-group\">\r\n        <div className={firstNameClasses}>\r\n          <label htmlFor=\"first-name\">First Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"first-name\"\r\n            value={firstName}\r\n            onChange={firstNameChangeHandler}\r\n          />\r\n          {firstNameIsInvalid && (\r\n            <p className=\"error-text\">First Name must not be empty!</p>\r\n          )}\r\n        </div>\r\n        <div className={lastNameClasses}>\r\n          <label htmlFor=\"last-name\">Last Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"last-name\"\r\n            value={lastName}\r\n            onChange={lastNameChangeHandler}\r\n          />\r\n          {lastNameIsInvalid && (\r\n            <p className=\"error-text\">Last Name must not be empty!</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className={emailClasses}>\r\n        <label htmlFor=\"email\">E-Mail Address</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"email\"\r\n          value={email}\r\n          onChange={emailChangeHandler}\r\n        />\r\n        {emailIsInvalid && (\r\n          <p className=\"error-text\">E-mail must include '@' or not be empty!</p>\r\n        )}\r\n      </div>\r\n      <div className=\"form-actions\">\r\n        <button disabled={!formIsValid}>Submit</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default BasicForm;\r\n","// import SimpleInput from './components/SimpleInput';\r\n\r\nimport BasicForm from \"./components/BasicForm\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      {/* <SimpleInput /> */}\r\n      <BasicForm/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}